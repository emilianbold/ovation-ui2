/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package us.physion.ovation.ui.importer;

import java.awt.Component;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.openide.util.ChangeSupport;

/**
 *
 * @author jackie
 */
public class ListSelectionPanel extends javax.swing.JPanel {

    private CheckboxListModel listModel;
    private ChangeSupport cs;

    /**
     * Creates new form ListSelectionPanel
     */
    public ListSelectionPanel(ChangeSupport cs, String label, String name) {
        this.cs = cs;
        initComponents();
        jLabel1.setText(label);
    }
    
    @Override
    public String getName() {
        return jLabel1.getText();
    }
    
    public void setNames(List<String> names)
    {
        listModel = new CheckboxListModel(names);
        jList1.setModel(listModel);
    }
    
    Set<String> getNames()
    {
        return listModel.getSelectedNames();
    }

    class CheckboxListModel extends AbstractListModel implements ListCellRenderer{

        List<CheckboxElement> elements;

        CheckboxListModel(List<String> names) {
            super();
            elements = new ArrayList();
            for (String n : names) {
                elements.add(new CheckboxElement(n));
            }
        }

        public int getSize() {
            return elements.size();
        }

        public Object getElementAt(int i) {
            return elements.get(i);
        }
        
        public Set<String> getSelectedNames()
        {
            Set<String> names = new HashSet();
            for (CheckboxElement e : elements)
            {
                if (e.isSelected())
                    names.add(e.getName());
            }
            return names;
        }

        @Override
        public Component getListCellRendererComponent(JList jlist, Object o, int i, boolean bln, boolean bln1) {
            if (o instanceof Component)
                return (Component)o;
            return new JLabel(o.toString());
        }

        class CheckboxElement extends JPanel{

            String name;
            boolean selected = true;

            CheckboxElement(String name) {
                this.name = name;
                JCheckBox box = new JCheckBox();
                add(box);
                add(new JLabel(name));
                box.setSelected(selected);
                box.addChangeListener(new ChangeListener() {

                    @Override
                    public void stateChanged(ChangeEvent ce) {
                        selected = !selected;
                    }
                });
            }

            boolean isSelected() {
                return selected;
            }
            public String getName()
            {
                return name;
            }
        }
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jList1);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ListSelectionPanel.class, "ListSelectionPanel.jLabel1.text")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

